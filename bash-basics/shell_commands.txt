На основе лекции
https://www.youtube.com/watch?v=cbo0HVW2ydw&list=PLrCZzMib1e9pun72f4KmFopzPs5pGB85_&index=2
---------------------------------------------------------------------------------------------

Некоторые базовые команды командной строки:
-------------------------------------------------------
whoami - кто я есть
groups - выводит группы текущего пользователя
echo $USER
id - выводит имя пользователя и группы с идентификаторома

env - выводит переменные среды
pwd - текущая директория (рабочий каталог)
ls - список файлов
ls -al - развернутый список файлов
ls -alh - с человекочитаемыми размерами

uname - печатает информацию о системе и ядре
uname -a - печатает всю информацию которую может
cat /proc/cpuinfo - информация о процессоре

df - свободное место на диске
free - использование пямяти и свопа
df -h - человекочитаемые размеры
df -i - количество/свободные inod'ы
free -h - человекочитаемые размеры

fdisk -l таблица разделов диска
top - процессы интерактивно
ps -ax - отображение списка процессов
ps -ax |grep process - поиск внутри выдачи ps процесса process
ps -ax |grep process |tee /dev/nul - tee stdout в файл и в stdout

dmesg - процесс загрузки

ls -i - вывод ссылок на иноды
stat [имя файла] - читает информацию о файле из инода в т.ч. количество жестких ссылок

w/who - команды показывающие открытые терминалы



/dev/nul - черная дыра
/dev/zero - источник нулей (можно проверять скорость записи на дисковое и не только устройство)
/dev/random - тяжелый генератор
/dev/urandom - более легкий генератор случайных чисел

which - где находится тот файл который мы собираемся исполнять (первое вхождение в PATH)



Многозадачность:
-------------------------------------------------------
^Z - увести текущую программу в фон (обычно это сигнал TSTP)
bg - продолжить ее выполнениев фоне
fg - достать программу из фона
jobs - посмотреть список фоновых задач
fg N - достать задачу номер N

несколько слов о (cpuisolation) - позволяет выключить из использования планировщиком некоторые ядра процессора и назначить ядро для конкретного процесса (единолично)

Поиск файлов:
-------------------------------------------------------
find - долгий поиск
locate - быстрый поиск но должен быть построен индекс

find:
-name фильтр по имени
-type указывать тип объекта который мы ищем d-директория f-файл
-mtime -модифицирован (ctime -создан) фильтр по времени изменения -2 файлы моложе 2х дней
-ls вывод в стиле ls -l
-exec command{} \; - для каждого найденого файла выполнить команду

Например: find . -name "*.gz" -exec echo "file {} found" \;

Редактор vi:
-------------------------------------------------------
* есть два режима вставка и командный
* i (insert перед текущим символом)
  a (append после текущего символа)
* <esc> выйти из режима вставки
* ^,$ начало/конец строки

* навигация: стрелочками или h,j,k,l
* dw, d6, d$, dd - удалить (слово, 6 символов, все до конца строкиб строку)
* yy скопировать строку (y6 скопировать 6 строк)
* p вставить строку
* x,wq - выйти с сохранением

sed - stream editor (читать man)



touch имя файла - создает пустой файл

cat > файл
* печатаем текст
* ctrl+d - EOF

mkdir - создает каталог
mkdir -p - создает все элементы пути
mkdir -v -подробный вывод

cp -v подробный вывод
cp -r копировать каталоги рекурсивно
cp -p сохранять разрешения (иначе права станут новыми согла

cd - перейти в предыдущую директорию
pushd - сменить директорию (предудущая сохранится в стек)
popd - сменить директорию на верхнюю из стека
dirs - показать стек директорий


Хитрости шела:
-------------------------------------------------------
* -маска имен для файла
echo * показать все файлы в каталоге без использования команды ls
for f in a b c; do echo $f; done
for f in *.txt; do echo $f; done
while true; do echo 1; sleep .1; done
echo {1..10} выводит от 1 до 10
mkdir {d1,d2,d3} создает 3 директории



Алиасы и функции bash: см лекцию №3 начало.
-------------------------------------------------------




dd if=/dev/zero of=./testfile1 bs=4K - записать в файл нули блоками по 4 Кб


